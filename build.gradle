/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Support for kotlin (used by libraries)
    id 'org.jetbrains.kotlin.jvm' version '1.4.20' 

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // test coverage
    id 'jacoco'

    // eclipse classpath generation: ./gradlew cleanEclipse eclipse
    id 'eclipse'

    // shadowJar plugin to build fat jar
    id 'com.github.johnrengelman.shadow' version '6.1.0'

}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    maven { url "https://dl.cloudsmith.io/public/libp2p/jvm-libp2p/maven/" }

}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

    implementation 'org.mozilla:rhino:1.7R4'

    implementation 'com.jcraft:jsch:0.1.55'

    // build and install locally for Apple Silicon
    implementation 'com.google.protobuf:protobuf-java:3.11.0'
    implementation("org.bouncycastle:bcprov-jdk15on:1.62")
    implementation("org.bouncycastle:bcpkix-jdk15on:1.62")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-M1")

 implementation 'io.libp2p:jvm-libp2p-minimal:0.8.0-RELEASE'
    // implementation 'io.libp2p:jvm-libp2p-minimal'
//    compile files('libs/jvm-libp2p-minimal-0.8.0-RELEASE.jar')

    api("io.netty:netty-all:4.1.36.Final")

    implementation("org.apache.logging.log4j:log4j-api:2.11.2")
    implementation("org.apache.logging.log4j:log4j-core:2.11.2")

}

sourceSets {
    main {
         java {
            srcDirs = ['src']
         }
         
        resources {
            srcDirs = ['resources']
        }
    }

    test {
        java {
            srcDirs = ['test']
        }
    }
}

// reproducible builds
tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

application {
    // Define the main class for the application.
    mainClassName = 'org.minima.Start'
    //mainClass.set("org.minima.Start") // new syntax for gradle 6.7+, plugins not compatible yet
}

// alternative main methods - see https://stackoverflow.com/questions/43937169/gradle-application-plugin-with-multiple-main-classes/46938169

// define a task for any alternative static void main method  - first arg is gradle task name: ./gradlew runp2p
task(runp2p, dependsOn: 'classes', type: JavaExec) {
   main = 'org.minima.system.network.base.P2PStart'   // org/minima/system/network/base/P2PStart
   classpath = sourceSets.main.runtimeClasspath
   // args ''/ip4/127.0.0.1/tcp/63407/ipfs/QmRGduDqyGXEsAGxAw9gM6tZrJbg1NEKSvmqwnjQqKwRVk'  // use this line to hardcode args 
   // systemProperty 'simple.message', 'Hello '
   // systemProperty 'log4j2.debug', 'true'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.minima.Start'
    }
}
